name: Go CI/CD

on:
  push:
    branches:
      - "**"
    tags:
      - "v*"
  pull_request:
    branches:
      - "**"
  release:
    types:
      - created

permissions:
  contents: write
  packages: write
jobs:
  docker_build:
    if: github.event_name == 'release'
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Create the bin directory
      - name: Create bin Directory
        run: mkdir -p ./bin

      # Download the correct binary from the phase-1 repo release (linux/amd64 example)
      - name: Download Linux AMD64 Binary from Phase-1 Repo
        run: |
          curl -L -o ./bin/pspdfkit_pe_challenge_linux_amd64 https://github.com/joshuamkite/pspdfkit-pe-challenge-phase-1/releases/latest/download/pspdfkit_pe_challenge_linux_amd64

      # Make the binary executable
      - name: Make Binary Executable
        run: |
          chmod +x ./bin/pspdfkit_pe_challenge_linux_amd64

      # Verify that the binary exists
      - name: Verify Binary Exists
        run: ls -la ./bin

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker Image
        run: |
          IMAGE_NAME=ghcr.io/${{ github.repository }}/pspdfkit_pe_challenge
          TAG_NAME=${{ github.ref_name }} # Use only the release tag for versioning
          docker build -t $IMAGE_NAME:latest -t $IMAGE_NAME:$TAG_NAME -f Dockerfile .

      - name: Push Docker Image
        run: |
          IMAGE_NAME=ghcr.io/${{ github.repository }}/pspdfkit_pe_challenge
          TAG_NAME=${{ github.ref_name }} # Use only the release tag for versioning
          docker push $IMAGE_NAME:latest
          docker push $IMAGE_NAME:$TAG_NAME
